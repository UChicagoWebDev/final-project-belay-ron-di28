{"ast":null,"code":"var _jsxFileName = \"/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/MessageList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageList({\n  currentChannel\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const apiKey = localStorage.getItem('api_key'); // Retrieve API key from localStorage\n\n  useEffect(() => {\n    if (!currentChannel) return; // Don't fetch if no channel is selected\n\n    fetch(`/api/channels/${currentChannel}/messages`, {\n      method: 'GET',\n      headers: {\n        'API-Key': apiKey // Assuming the API key is sent as a Bearer token\n      }\n    }).then(response => response.json()).then(data => {\n      setMessages(data);\n    }).catch(error => console.error('Error fetching messages:', error));\n  }, [currentChannel]); // Dependency array: Refetch messages when currentChannel changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list\",\n    children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [msg.name, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), \" \", msg.body]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageList, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MessageList","currentChannel","_s","messages","setMessages","apiKey","localStorage","getItem","fetch","method","headers","then","response","json","data","catch","error","console","className","children","map","msg","index","name","fileName","_jsxFileName","lineNumber","columnNumber","body","_c","$RefreshReg$"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/MessageList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MessageList({ currentChannel }) {\n  const [messages, setMessages] = useState([]);\n  const apiKey = localStorage.getItem('api_key'); // Retrieve API key from localStorage\n\n  useEffect(() => {\n    if (!currentChannel) return; // Don't fetch if no channel is selected\n\n    fetch(`/api/channels/${currentChannel}/messages`, {\n      method: 'GET',\n      headers: {\n        'API-Key': apiKey // Assuming the API key is sent as a Bearer token\n      },\n    })\n    .then(response => response.json())\n    .then(data => {\n      setMessages(data);\n    })\n    .catch(error => console.error('Error fetching messages:', error));\n  }, [currentChannel]); // Dependency array: Refetch messages when currentChannel changes\n\n  return (\n    <div className=\"message-list\">\n      {messages.map((msg, index) => (\n        <div key={index}>\n          <strong>{msg.name}:</strong> {msg.body}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default MessageList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;;EAEhDV,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,cAAc,EAAE,OAAO,CAAC;;IAE7BO,KAAK,CAAE,iBAAgBP,cAAe,WAAU,EAAE;MAChDQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,SAAS,EAAEL,MAAM,CAAC;MACpB;IACF,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZV,WAAW,CAACU,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,CAACf,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACEF,OAAA;IAAKmB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BhB,QAAQ,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBvB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,GAASE,GAAG,CAACE,IAAI,EAAC,GAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACN,GAAG,CAACO,IAAI;IAAA,GAD9BN,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CA7BQF,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA+BpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/ReplyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReplyList({\n  messageId,\n  onClose\n}) {\n  _s();\n  const [parentMessage, setParentMessage] = useState(null);\n  const [replies, setReplies] = useState([]);\n  const [newReply, setNewReply] = useState(''); // State to hold the new reply input\n\n  const apiKey = localStorage.getItem('api_key');\n  useEffect(() => {\n    if (!messageId) return;\n\n    // Fetch the parent message and its replies\n    fetch(`/api/messages/${messageId}/replies`, {\n      headers: {\n        'API-Key': apiKey // Assuming the API key is sent as a Bearer token\n      }\n    }).then(response => response.json()).then(data => {\n      setParentMessage(data.parentMessage);\n      setReplies(data.replies);\n    }).catch(error => console.error('Error fetching replies:', error));\n  }, [messageId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newReply.trim()) return; // Prevent sending empty replies\n\n    try {\n      const response = await fetch(`/api/messages/${messageId}/replies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey // Assuming the API key is sent as a Bearer token\n        },\n        body: JSON.stringify({\n          message: newReply\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to post reply');\n      }\n      setNewReply(''); // Clear the input field on successful reply post\n\n      // Optionally, refetch replies for the current message to show the new reply\n    } catch (error) {\n      console.error('Error posting reply:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-btn\",\n      onClick: onClose,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.name, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \" \", parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.body]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"replies\",\n      children: replies.length > 0 ? replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [reply.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), \" \", reply.body]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No replies yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"reply-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newReply,\n        onChange: e => setNewReply(e.target.value),\n        placeholder: \"Write a reply...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ReplyList, \"s/oVYCP+PxyAYe81pbPXWKNWJ80=\");\n_c = ReplyList;\nexport default ReplyList;\nvar _c;\n$RefreshReg$(_c, \"ReplyList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ReplyList","messageId","onClose","_s","parentMessage","setParentMessage","replies","setReplies","newReply","setNewReply","apiKey","localStorage","getItem","fetch","headers","then","response","json","data","catch","error","console","handleSubmit","e","preventDefault","trim","method","body","JSON","stringify","message","ok","Error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","length","map","reply","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/ReplyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ReplyList({ messageId, onClose }) {\n  const [parentMessage, setParentMessage] = useState(null);\n  const [replies, setReplies] = useState([]);\n  const [newReply, setNewReply] = useState(''); // State to hold the new reply input\n\n  const apiKey = localStorage.getItem('api_key');\n\n  useEffect(() => {\n    if (!messageId) return;\n\n    // Fetch the parent message and its replies\n    fetch(`/api/messages/${messageId}/replies`, {\n      headers: {\n        'API-Key': apiKey // Assuming the API key is sent as a Bearer token\n      },\n    })\n    .then(response => response.json())\n    .then(data => {\n      setParentMessage(data.parentMessage);\n      setReplies(data.replies);\n    })\n    .catch(error => console.error('Error fetching replies:', error));\n  }, [messageId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!newReply.trim()) return; // Prevent sending empty replies\n\n    try {\n      const response = await fetch(`/api/messages/${messageId}/replies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey // Assuming the API key is sent as a Bearer token\n        },\n        body: JSON.stringify({ message: newReply }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to post reply');\n      }\n\n      setNewReply(''); // Clear the input field on successful reply post\n\n      // Optionally, refetch replies for the current message to show the new reply\n    } catch (error) {\n      console.error('Error posting reply:', error);\n    }\n  };\n\n  return (\n    <div className=\"reply-list\">\n\n      <button className=\"close-btn\" onClick={onClose}>X</button>\n      <div className=\"parent-message\">\n        <strong>{parentMessage?.name}:</strong> {parentMessage?.body}\n      </div>\n      <div className=\"replies\">\n        {replies.length > 0 ? (\n          replies.map((reply, index) => (\n            <div key={index} className=\"reply\">\n              <strong>{reply.name}:</strong> {reply.body}\n            </div>\n          ))\n        ) : (\n          <p>No replies yet</p>\n        )}\n      </div>\n      <form onSubmit={handleSubmit} className=\"reply-form\">\n        <input\n          type=\"text\"\n          value={newReply}\n          onChange={(e) => setNewReply(e.target.value)}\n          placeholder=\"Write a reply...\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ReplyList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProfilePage(){const navigate=useNavigate();const[newUsername,setNewUsername]=useState('');const[newPassword,setNewPassword]=useState('');const apiKey=localStorage.getItem('api_key');const username=sessionStorage.getItem('username');const password=sessionStorage.getItem('password');const handleLogout=()=>{// Clear sessionStorage and localStorage on logout\nsessionStorage.removeItem('username');sessionStorage.removeItem('password');localStorage.removeItem('api_key');// Redirect to login page\nnavigate('/login');};const handleGoHome=()=>{navigate('/');};const handleChangeUsername=async e=>{e.preventDefault();try{const response=await fetch('/api/user/username',{method:'POST',headers:{'Content-Type':'application/json','API-Key':apiKey},body:JSON.stringify({new_username:newUsername})});if(!response.ok){throw new Error('Failed to update username');}const data=await response.json();console.log(data.message);sessionStorage.setItem('username',newUsername);}catch(error){console.error('Error updating username:',error);}};const handleChangePassword=async e=>{e.preventDefault();try{const response=await fetch('/api/user/password',{method:'POST',headers:{'Content-Type':'application/json','API-Key':apiKey},body:JSON.stringify({new_password:newPassword})});if(!response.ok){throw new Error('Failed to update password');}const data=await response.json();console.log(data.message);sessionStorage.setItem('password',newPassword);}catch(error){console.error('Error updating password:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Profile Page\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleChangeUsername,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newUsername,onChange:e=>setNewUsername(e.target.value),placeholder:username,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Change Username\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleChangePassword,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newPassword,onChange:e=>setNewPassword(e.target.value),placeholder:password,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Change Password\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Log Out\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGoHome,children:\"Let's Go\"})]});}export default ProfilePage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","ProfilePage","navigate","newUsername","setNewUsername","newPassword","setNewPassword","apiKey","localStorage","getItem","username","sessionStorage","password","handleLogout","removeItem","handleGoHome","handleChangeUsername","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","new_username","ok","Error","data","json","console","log","message","setItem","error","handleChangePassword","new_password","children","onSubmit","type","value","onChange","target","placeholder","required","onClick"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction ProfilePage() {\n    const navigate = useNavigate();\n    const [newUsername, setNewUsername] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n\n    const apiKey = localStorage.getItem('api_key');\n    const username = sessionStorage.getItem('username');\n    const password = sessionStorage.getItem('password');\n\n    const handleLogout = () => {\n        // Clear sessionStorage and localStorage on logout\n        sessionStorage.removeItem('username');\n        sessionStorage.removeItem('password');\n        localStorage.removeItem('api_key');\n    \n        // Redirect to login page\n        navigate('/login');\n    };\n\n    const handleGoHome = () => {\n        navigate('/'); \n    };\n\n    const handleChangeUsername = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch('/api/user/username', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'API-Key': apiKey\n                }, \n                body: JSON.stringify({ new_username: newUsername }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to update username');\n            }\n\n            const data = await response.json();\n            console.log(data.message);\n            sessionStorage.setItem('username', newUsername);\n        } catch (error) {\n            console.error('Error updating username:', error);\n        }\n    };\n\n    const handleChangePassword = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch('/api/user/password', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'API-Key': apiKey\n                }, \n                body: JSON.stringify({ new_password: newPassword }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to update password');\n            }\n\n            const data = await response.json();\n            console.log(data.message);\n            sessionStorage.setItem('password', newPassword);\n        } catch (error) {\n            console.error('Error updating password:', error);\n        }\n    };\n\n    return (\n        <div>\n        <h2>Profile Page</h2>\n        <form onSubmit={handleChangeUsername}>\n            <input\n            type=\"text\"\n            value={newUsername}\n            onChange={(e) => setNewUsername(e.target.value)}\n            placeholder={username}\n            required\n            />\n            <button type=\"submit\">Change Username</button>\n        </form>\n\n        <form onSubmit={handleChangePassword}>\n            <input\n            type=\"text\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            placeholder={password}\n            required\n            />\n            <button type=\"submit\">Change Password</button>\n        </form>\n        <button onClick={handleLogout}>Log Out</button>\n        <button onClick={handleGoHome}>Let's Go</button> \n        </div>\n    );\n}\n\nexport default ProfilePage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACnB,KAAM,CAAAC,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACO,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACU,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAElD,KAAM,CAAAY,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAC9C,KAAM,CAAAC,QAAQ,CAAGC,cAAc,CAACF,OAAO,CAAC,UAAU,CAAC,CACnD,KAAM,CAAAG,QAAQ,CAAGD,cAAc,CAACF,OAAO,CAAC,UAAU,CAAC,CAEnD,KAAM,CAAAI,YAAY,CAAGA,CAAA,GAAM,CACvB;AACAF,cAAc,CAACG,UAAU,CAAC,UAAU,CAAC,CACrCH,cAAc,CAACG,UAAU,CAAC,UAAU,CAAC,CACrCN,YAAY,CAACM,UAAU,CAAC,SAAS,CAAC,CAElC;AACAZ,QAAQ,CAAC,QAAQ,CAAC,CACtB,CAAC,CAED,KAAM,CAAAa,YAAY,CAAGA,CAAA,GAAM,CACvBb,QAAQ,CAAC,GAAG,CAAC,CACjB,CAAC,CAED,KAAM,CAAAc,oBAAoB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACtCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,oBAAoB,CAAE,CAC/CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,SAAS,CAAEf,MACf,CAAC,CACDgB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,YAAY,CAAEvB,WAAY,CAAC,CACtD,CAAC,CAAC,CAEF,GAAI,CAACgB,QAAQ,CAACQ,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CAChD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC,CACzBtB,cAAc,CAACuB,OAAO,CAAC,UAAU,CAAE/B,WAAW,CAAC,CACnD,CAAE,MAAOgC,KAAK,CAAE,CACZJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CACpD,CACJ,CAAC,CAED,KAAM,CAAAC,oBAAoB,CAAG,KAAO,CAAAnB,CAAC,EAAK,CACtCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,oBAAoB,CAAE,CAC/CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,SAAS,CAAEf,MACf,CAAC,CACDgB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEY,YAAY,CAAEhC,WAAY,CAAC,CACtD,CAAC,CAAC,CAEF,GAAI,CAACc,QAAQ,CAACQ,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CAChD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC,CACzBtB,cAAc,CAACuB,OAAO,CAAC,UAAU,CAAE7B,WAAW,CAAC,CACnD,CAAE,MAAO8B,KAAK,CAAE,CACZJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CACpD,CACJ,CAAC,CAED,mBACInC,KAAA,QAAAsC,QAAA,eACAxC,IAAA,OAAAwC,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBtC,KAAA,SAAMuC,QAAQ,CAAEvB,oBAAqB,CAAAsB,QAAA,eACjCxC,IAAA,UACA0C,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEtC,WAAY,CACnBuC,QAAQ,CAAGzB,CAAC,EAAKb,cAAc,CAACa,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE,CAChDG,WAAW,CAAElC,QAAS,CACtBmC,QAAQ,MACP,CAAC,cACF/C,IAAA,WAAQ0C,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,iBAAe,CAAQ,CAAC,EAC5C,CAAC,cAEPtC,KAAA,SAAMuC,QAAQ,CAAEH,oBAAqB,CAAAE,QAAA,eACjCxC,IAAA,UACA0C,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEpC,WAAY,CACnBqC,QAAQ,CAAGzB,CAAC,EAAKX,cAAc,CAACW,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE,CAChDG,WAAW,CAAEhC,QAAS,CACtBiC,QAAQ,MACP,CAAC,cACF/C,IAAA,WAAQ0C,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,iBAAe,CAAQ,CAAC,EAC5C,CAAC,cACPxC,IAAA,WAAQgD,OAAO,CAAEjC,YAAa,CAAAyB,QAAA,CAAC,SAAO,CAAQ,CAAC,cAC/CxC,IAAA,WAAQgD,OAAO,CAAE/B,YAAa,CAAAuB,QAAA,CAAC,UAAQ,CAAQ,CAAC,EAC3C,CAAC,CAEd,CAEA,cAAe,CAAArC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
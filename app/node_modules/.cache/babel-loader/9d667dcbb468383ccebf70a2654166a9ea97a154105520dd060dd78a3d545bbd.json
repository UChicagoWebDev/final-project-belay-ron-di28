{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Route,Routes,Navigate}from'react-router-dom';import ChannelList from'./ChannelList';import MessageList from'./MessageList';import ReplyList from'./ReplyList';import ProfilePage from'./Profile';import LoginPage from'./LoginPage';import ProtectedRoute from'./ProtectedRoute';import{useParams}from'react-router-dom';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChannelAndMessages(){let{channelId,messageId}=useParams();const[selectedMessageId,setSelectedMessageId]=useState(messageId||null);const[isNarrowScreen,setIsNarrowScreen]=useState(window.innerWidth<768);const[currentView,setCurrentView]=useState('channels');// Default to 'channels'\nuseEffect(()=>{const handleResize=()=>setIsNarrowScreen(window.innerWidth<768);window.addEventListener('resize',handleResize);return()=>window.removeEventListener('resize',handleResize);},[]);useEffect(()=>{if(messageId){setCurrentView('replies');setSelectedMessageId(messageId);}else if(channelId){setCurrentView('messages');}else{setCurrentView('channels');}},[messageId,channelId,isNarrowScreen]);const closeReplyList=()=>{setSelectedMessageId(null);setCurrentView('messages');// Ensure view goes back to messages after closing replies\n};const renderComponent=()=>{switch(currentView){case'channels':return/*#__PURE__*/_jsx(ChannelList,{setCurrentView:setCurrentView});case'messages':return/*#__PURE__*/_jsx(MessageList,{currentChannel:channelId,setSelectedMessageId:setSelectedMessageId,setCurrentView:setCurrentView});case'replies':if(selectedMessageId){return/*#__PURE__*/_jsx(ReplyList,{messageId:selectedMessageId,onClose:closeReplyList});}break;default:return/*#__PURE__*/_jsx(ChannelList,{setCurrentView:setCurrentView});}};return/*#__PURE__*/_jsx(\"div\",{className:\"channel-content\",children:renderComponent()});}function App(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ProfilePage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/channels/:channelId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ChannelAndMessages,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/channels/:channelId/replies/:messageId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ChannelAndMessages,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/channels/1\"})})]})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","ChannelList","MessageList","ReplyList","ProfilePage","LoginPage","ProtectedRoute","useParams","jsx","_jsx","jsxs","_jsxs","ChannelAndMessages","channelId","messageId","selectedMessageId","setSelectedMessageId","isNarrowScreen","setIsNarrowScreen","window","innerWidth","currentView","setCurrentView","handleResize","addEventListener","removeEventListener","closeReplyList","renderComponent","currentChannel","onClose","className","children","App","path","element","replace","to"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport ChannelList from './ChannelList';\nimport MessageList from './MessageList';\nimport ReplyList from './ReplyList';\nimport ProfilePage from './Profile';\nimport LoginPage from './LoginPage';\nimport ProtectedRoute from './ProtectedRoute';\nimport { useParams } from 'react-router-dom';\nimport './App.css'\n\n\nfunction ChannelAndMessages() {\n  let { channelId, messageId } = useParams();\n  const [selectedMessageId, setSelectedMessageId] = useState(messageId || null);\n  const [isNarrowScreen, setIsNarrowScreen] = useState(window.innerWidth < 768);\n  const [currentView, setCurrentView] = useState('channels'); // Default to 'channels'\n\n  useEffect(() => {\n    const handleResize = () => setIsNarrowScreen(window.innerWidth < 768);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (messageId) {\n      setCurrentView('replies');\n      setSelectedMessageId(messageId);\n    } else if (channelId) {\n      setCurrentView('messages');\n    } else {\n      setCurrentView('channels');\n    }\n  }, [messageId, channelId, isNarrowScreen]);\n\n  const closeReplyList = () => {\n    setSelectedMessageId(null);\n    setCurrentView('messages'); // Ensure view goes back to messages after closing replies\n  };\n\n  const renderComponent = () => {\n    switch (currentView) {\n      case 'channels':\n        return <ChannelList setCurrentView={setCurrentView} />;\n      case 'messages':\n        return <MessageList currentChannel={channelId} setSelectedMessageId={setSelectedMessageId} setCurrentView={setCurrentView} />;\n      case 'replies':\n        if (selectedMessageId) {\n          return <ReplyList messageId={selectedMessageId} onClose={closeReplyList} />;\n        }\n        break;\n      default:\n        return <ChannelList setCurrentView={setCurrentView} />;\n    }\n  };\n\n  return <div className=\"channel-content\">{renderComponent()}</div>;\n}\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Routes>\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/profile\" element={<ProtectedRoute><ProfilePage /></ProtectedRoute>} />\n          <Route path=\"/channels/:channelId\" element={<ProtectedRoute><ChannelAndMessages /></ProtectedRoute>} />\n          <Route path=\"/channels/:channelId/replies/:messageId\" element={<ProtectedRoute><ChannelAndMessages /></ProtectedRoute>} />\n          <Route path=\"/\" element={<Navigate replace to=\"/channels/1\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
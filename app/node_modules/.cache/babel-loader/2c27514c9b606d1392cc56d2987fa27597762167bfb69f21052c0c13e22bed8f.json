{"ast":null,"code":"var _jsxFileName = \"/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/ReplyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReplyList({\n  messageId,\n  onClose\n}) {\n  _s();\n  const [parentMessage, setParentMessage] = useState(null);\n  const [replies, setReplies] = useState([]);\n  const [newReply, setNewReply] = useState('');\n  const apiKey = localStorage.getItem('api_key');\n\n  // Define a function to fetch replies\n  const fetchReplies = () => {\n    if (!messageId) return;\n    fetch(`/api/messages/${messageId}/replies`, {\n      headers: {\n        'API-Key': apiKey\n      }\n    }).then(response => response.json()).then(data => {\n      setParentMessage(data.parentMessage);\n      setReplies(data.replies);\n    }).catch(error => console.error('Error fetching replies:', error));\n  };\n  useEffect(() => {\n    fetchReplies(); // Fetch replies initially\n\n    const intervalId = setInterval(fetchReplies, 500); // Poll for new replies every 5000 ms\n\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, [messageId, apiKey]); // Re-run effect if messageId or apiKey changes\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newReply.trim()) return;\n    try {\n      const response = await fetch(`/api/messages/${messageId}/replies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey\n        },\n        body: JSON.stringify({\n          message: newReply\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to post reply');\n      }\n      setNewReply(''); // Clear the reply input field\n      fetchReplies(); // Fetch the latest replies after posting a new one\n    } catch (error) {\n      console.error('Error posting reply:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-btn\",\n      onClick: onClose,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.name, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), \" \", parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.body]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"replies\",\n      children: replies.length > 0 ? replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [reply.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), \" \", reply.body]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No replies yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"reply-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newReply,\n        onChange: e => setNewReply(e.target.value),\n        placeholder: \"Write a reply...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n_s(ReplyList, \"s/oVYCP+PxyAYe81pbPXWKNWJ80=\");\n_c = ReplyList;\nexport default ReplyList;\nvar _c;\n$RefreshReg$(_c, \"ReplyList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ReplyList","messageId","onClose","_s","parentMessage","setParentMessage","replies","setReplies","newReply","setNewReply","apiKey","localStorage","getItem","fetchReplies","fetch","headers","then","response","json","data","catch","error","console","intervalId","setInterval","clearInterval","handleSubmit","e","preventDefault","trim","method","body","JSON","stringify","message","ok","Error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","length","map","reply","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/ReplyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ReplyList({ messageId, onClose }) {\n  const [parentMessage, setParentMessage] = useState(null);\n  const [replies, setReplies] = useState([]);\n  const [newReply, setNewReply] = useState('');\n\n  const apiKey = localStorage.getItem('api_key');\n\n  // Define a function to fetch replies\n  const fetchReplies = () => {\n      if (!messageId) return;\n\n      fetch(`/api/messages/${messageId}/replies`, {\n          headers: {\n              'API-Key': apiKey\n          },\n      })\n      .then(response => response.json())\n      .then(data => {\n          setParentMessage(data.parentMessage);\n          setReplies(data.replies);\n      })\n      .catch(error => console.error('Error fetching replies:', error));\n  };\n\n  useEffect(() => {\n      fetchReplies(); // Fetch replies initially\n\n      const intervalId = setInterval(fetchReplies, 500); // Poll for new replies every 5000 ms\n\n      return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, [messageId, apiKey]); // Re-run effect if messageId or apiKey changes\n\n  const handleSubmit = async (e) => {\n      e.preventDefault();\n      if (!newReply.trim()) return;\n\n      try {\n          const response = await fetch(`/api/messages/${messageId}/replies`, {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n                  'API-Key': apiKey\n              },\n              body: JSON.stringify({ message: newReply }),\n          });\n\n          if (!response.ok) {\n              throw new Error('Failed to post reply');\n          }\n\n          setNewReply(''); // Clear the reply input field\n          fetchReplies(); // Fetch the latest replies after posting a new one\n\n      } catch (error) {\n          console.error('Error posting reply:', error);\n      }\n  };\n\n    return (\n      <div className=\"reply-list\">\n        <button className=\"close-btn\" onClick={onClose}>X</button>\n        <div className=\"parent-message\">\n          <strong>{parentMessage?.name}:</strong> {parentMessage?.body}\n        </div>\n        <div className=\"replies\">\n          {replies.length > 0 ? (\n            replies.map((reply, index) => (\n              <div key={index} className=\"reply\">\n                <strong>{reply.name}:</strong> {reply.body}\n              </div>\n            ))\n          ) : (\n            <p>No replies yet</p>\n          )}\n        </div>\n        <form onSubmit={handleSubmit} className=\"reply-form\">\n          <input\n            type=\"text\"\n            value={newReply}\n            onChange={(e) => setNewReply(e.target.value)}\n            placeholder=\"Write a reply...\"\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    );\n}\n\nexport default ReplyList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport ChannelList from './ChannelList';\nimport MessageList from './MessageList';\nimport ProfilePage from './Profile';\nimport LoginPage from './LoginPage';\nimport ProtectedRoute from './ProtectedRoute';\nimport { useParams } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/channels/:channelId\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(ChannelAndMessages, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/channels/1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n// A component to handle rendering both the channel list and messages for a channel\n_c = App;\nfunction ChannelAndMessages() {\n  _s();\n  let {\n    channelId\n  } = useParams(); // This hook allows you to grab params from the URL.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChannelList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      currentChannel: channelId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n}\n_s(ChannelAndMessages, \"9IMMKbf9Fi2AANlwI8+ItwOGrKU=\", false, function () {\n  return [useParams];\n});\n_c2 = ChannelAndMessages;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChannelAndMessages\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","ChannelList","MessageList","ProfilePage","LoginPage","ProtectedRoute","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","ChannelAndMessages","replace","to","_c","_s","channelId","currentChannel","_c2","$RefreshReg$"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport ChannelList from './ChannelList';\nimport MessageList from './MessageList';\nimport ProfilePage from './Profile';\nimport LoginPage from './LoginPage';\nimport ProtectedRoute from './ProtectedRoute';\nimport { useParams } from 'react-router-dom';\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Routes>\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/profile\" element={\n            <ProtectedRoute>\n              <ProfilePage />\n            </ProtectedRoute>\n          } />\n          <Route path=\"/channels/:channelId\" element={\n            <ProtectedRoute>\n              {/* Removed the nested <div className=\"app\"> */}\n              <ChannelAndMessages />\n            </ProtectedRoute>\n          } />\n          {/* Redirect root path to a default or specific channel for better UX */}\n          <Route path=\"/\" element={<Navigate replace to=\"/channels/1\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\n\n// A component to handle rendering both the channel list and messages for a channel\nfunction ChannelAndMessages() {\n  let { channelId } = useParams(); // This hook allows you to grab params from the URL.\n\n  return (\n    <>\n      <ChannelList />\n      <MessageList currentChannel={channelId} /> {/* Pass channelId to MessageList */}\n    </>\n  );\n}\n\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
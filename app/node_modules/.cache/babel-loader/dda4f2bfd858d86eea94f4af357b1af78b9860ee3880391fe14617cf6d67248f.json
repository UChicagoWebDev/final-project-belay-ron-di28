{"ast":null,"code":"var _jsxFileName = \"/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/ChannelList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChannelList({\n  setCurrentChannel\n}) {\n  _s();\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    // Fetch channels from the API\n    fetch('/api/channels') // Adjust the URL as needed\n    .then(response => response.json()).then(data => {\n      setChannels(data);\n    }).catch(error => console.error('Error fetching channels:', error));\n  }, []); // This effect runs once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"channel-header\",\n      children: \"Channels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), channels.map(channel => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setCurrentChannel(channel.id),\n      children: channel.name\n    }, channel.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(ChannelList, \"MEXUtmfwu4/eJAvHrnimD0/z+mI=\");\n_c = ChannelList;\nexport default ChannelList;\nvar _c;\n$RefreshReg$(_c, \"ChannelList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChannelList","setCurrentChannel","_s","channels","setChannels","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","channel","onClick","id","name","_c","$RefreshReg$"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/ChannelList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ChannelList({ setCurrentChannel }) {\n  const [channels, setChannels] = useState([]);\n\n  useEffect(() => {\n    // Fetch channels from the API\n    fetch('/api/channels') // Adjust the URL as needed\n      .then(response => response.json())\n      .then(data => {\n        setChannels(data);\n      })\n      .catch(error => console.error('Error fetching channels:', error));\n  }, []); // This effect runs once on component mount\n\n  return (\n    <div className=\"channel-list\">\n      <h2 className=\"channel-header\">Channels</h2>\n      {channels.map(channel => (\n        <div key={channel.id} onClick={() => setCurrentChannel(channel.id)}>\n          {channel.name}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ChannelList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,eAAe,CAAC,CAAC;IAAA,CACpBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZL,WAAW,CAACK,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA;IAAKc,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bf,OAAA;MAAIc,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3Cf,QAAQ,CAACgB,GAAG,CAACC,OAAO,iBACnBrB,OAAA;MAAsBsB,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACmB,OAAO,CAACE,EAAE,CAAE;MAAAR,QAAA,EAChEM,OAAO,CAACG;IAAI,GADLH,OAAO,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CAvBQF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAyBpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
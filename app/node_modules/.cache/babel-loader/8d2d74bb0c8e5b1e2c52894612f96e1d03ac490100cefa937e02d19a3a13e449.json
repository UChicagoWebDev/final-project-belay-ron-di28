{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Route,Routes,Navigate}from'react-router-dom';import ChannelList from'./ChannelList';import MessageList from'./MessageList';import ReplyList from'./ReplyList';import ProfilePage from'./Profile';import LoginPage from'./LoginPage';import ProtectedRoute from'./ProtectedRoute';import{useParams}from'react-router-dom';import'./App.css';// Create a component to handle channel and message display logic\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChannelAndMessages(){let{channelId,messageId}=useParams();const[selectedMessageId,setSelectedMessageId]=useState(messageId||null);const[isNarrowScreen,setIsNarrowScreen]=useState(window.innerWidth<768);useEffect(()=>{const handleResize=()=>setIsNarrowScreen(window.innerWidth<768);window.addEventListener('resize',handleResize);return()=>window.removeEventListener('resize',handleResize);},[]);useEffect(()=>{setSelectedMessageId(messageId);// Automatically adjust the view based on screen width and URL parameters\nif(isNarrowScreen){if(messageId)setCurrentView('replies');else if(channelId)setCurrentView('messages');else setCurrentView('channels');}},[messageId,channelId,isNarrowScreen]);const closeReplyList=()=>setSelectedMessageId(null);const renderComponent=()=>{if(isNarrowScreen){switch(currentView){case'channels':return/*#__PURE__*/_jsx(ChannelList,{setCurrentView:setCurrentView});case'messages':return/*#__PURE__*/_jsx(MessageList,{currentChannel:channelId,setSelectedMessageId:setSelectedMessageId});case'replies':if(selectedMessageId){return/*#__PURE__*/_jsx(ReplyList,{messageId:selectedMessageId,onClose:()=>setCurrentView('messages')});}break;default:return/*#__PURE__*/_jsx(ChannelList,{setCurrentView:setCurrentView});}}else{// Wide screen layout\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ChannelList,{setCurrentView:setCurrentView}),/*#__PURE__*/_jsx(MessageList,{currentChannel:channelId,setSelectedMessageId:setSelectedMessageId}),selectedMessageId&&/*#__PURE__*/_jsx(ReplyList,{messageId:selectedMessageId,onClose:closeReplyList})]});}};return/*#__PURE__*/_jsx(\"div\",{className:\"channel-content\",children:renderComponent()});}function App(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ProfilePage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/channels/:channelId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ChannelAndMessages,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/channels/:channelId/replies/:messageId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ChannelAndMessages,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/channels/1\"})})]})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","ChannelList","MessageList","ReplyList","ProfilePage","LoginPage","ProtectedRoute","useParams","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ChannelAndMessages","channelId","messageId","selectedMessageId","setSelectedMessageId","isNarrowScreen","setIsNarrowScreen","window","innerWidth","handleResize","addEventListener","removeEventListener","setCurrentView","closeReplyList","renderComponent","currentView","currentChannel","onClose","children","className","App","path","element","replace","to"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport ChannelList from './ChannelList';\nimport MessageList from './MessageList';\nimport ReplyList from './ReplyList';\nimport ProfilePage from './Profile';\nimport LoginPage from './LoginPage';\nimport ProtectedRoute from './ProtectedRoute';\nimport { useParams } from 'react-router-dom';\nimport './App.css'\n\n\n// Create a component to handle channel and message display logic\nfunction ChannelAndMessages() {\n  let { channelId, messageId } = useParams();\n  const [selectedMessageId, setSelectedMessageId] = useState(messageId || null);\n  const [isNarrowScreen, setIsNarrowScreen] = useState(window.innerWidth < 768);\n\n  useEffect(() => {\n    const handleResize = () => setIsNarrowScreen(window.innerWidth < 768);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    setSelectedMessageId(messageId);\n    // Automatically adjust the view based on screen width and URL parameters\n    if (isNarrowScreen) {\n      if (messageId) setCurrentView('replies');\n      else if (channelId) setCurrentView('messages');\n      else setCurrentView('channels');\n    }\n  }, [messageId, channelId, isNarrowScreen]);\n\n  const closeReplyList = () => setSelectedMessageId(null);\n\n  const renderComponent = () => {\n    if (isNarrowScreen) {\n      switch (currentView) {\n        case 'channels':\n          return <ChannelList setCurrentView={setCurrentView} />;\n        case 'messages':\n          return <MessageList currentChannel={channelId} setSelectedMessageId={setSelectedMessageId} />;\n        case 'replies':\n          if (selectedMessageId) {\n            return <ReplyList messageId={selectedMessageId} onClose={() => setCurrentView('messages')} />;\n          }\n          break;\n        default:\n          return <ChannelList setCurrentView={setCurrentView} />;\n      }\n    } else {\n      // Wide screen layout\n      return (\n        <>\n          <ChannelList setCurrentView={setCurrentView} />\n          <MessageList currentChannel={channelId} setSelectedMessageId={setSelectedMessageId} />\n          {selectedMessageId && <ReplyList messageId={selectedMessageId} onClose={closeReplyList} />}\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className=\"channel-content\">\n      {renderComponent()}\n    </div>\n  );\n}\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Routes>\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/profile\" element={<ProtectedRoute><ProfilePage /></ProtectedRoute>} />\n          <Route path=\"/channels/:channelId\" element={<ProtectedRoute><ChannelAndMessages /></ProtectedRoute>} />\n          <Route path=\"/channels/:channelId/replies/:messageId\" element={<ProtectedRoute><ChannelAndMessages /></ProtectedRoute>} />\n          <Route path=\"/\" element={<Navigate replace to=\"/channels/1\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  let navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Fetch API call to login\n    try {\n      const response = await fetch('/api/login', {\n        method: 'GET',\n        headers: {\n          'Username': username,\n          'Password': password\n        }\n      });\n      if (!response.ok) {\n        throw new Error('User not found');\n      }\n      const {\n        api_key\n      } = await response.json();\n      localStorage.setItem('api_key', api_key); // Store API key in localStorage\n      // Store username and password in sessionStorage for learning purposes\n      sessionStorage.setItem('username', username);\n      sessionStorage.setItem('password', password);\n      console.log('Login successful:', api_key);\n      navigate('/profile'); // Navigate to profile page upon successful login\n    } catch (error) {\n      console.error('Error during login:', error);\n      // Optionally handle the error, e.g., display an error message\n    }\n  };\n  const handleCreateAccountSubmit = async e => {\n    e.preventDefault();\n    // Assuming your API does not require username/password for signup, but adjust if it does\n    try {\n      const response = await fetch('/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n        // Uncomment and adjust the body if your API requires it\n        // body: JSON.stringify({ username, password }), \n      });\n      if (!response.ok) throw new Error('Failed to create account');\n      const data = await response.json();\n      localStorage.setItem('api_key', data.api_key); // Store API key in localStorage\n      sessionStorage.setItem('user_name', data.username); // Store username in sessionStorage\n      sessionStorage.setItem('password', data.password); // Store password in sessionStorage\n      console.log('Account created:', data);\n      navigate('/profile'); // Navigate to profile page upon successful account creation\n    } catch (error) {\n      console.error('Error creating account:', error);\n      // Handle error (e.g., show error message to user)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateAccountSubmit,\n      children: \"Create an Account Automatically\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","ok","Error","api_key","json","localStorage","setItem","sessionStorage","console","log","error","handleCreateAccountSubmit","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction LoginPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  let navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    // Fetch API call to login\n    try {\n      const response = await fetch('/api/login', {\n        method: 'GET',\n        headers: {\n          'Username': username,\n          'Password': password,\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error('User not found');\n      }\n\n      const { api_key } = await response.json();\n      localStorage.setItem('api_key', api_key); // Store API key in localStorage\n      // Store username and password in sessionStorage for learning purposes\n      sessionStorage.setItem('username', username);\n      sessionStorage.setItem('password', password);\n\n      console.log('Login successful:', api_key);\n      navigate('/profile'); // Navigate to profile page upon successful login\n    } catch (error) {\n      console.error('Error during login:', error);\n      // Optionally handle the error, e.g., display an error message\n    }\n  };\n\n  const handleCreateAccountSubmit = async (e) => {\n    e.preventDefault();\n    // Assuming your API does not require username/password for signup, but adjust if it does\n    try {\n      const response = await fetch('/api/signup', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        // Uncomment and adjust the body if your API requires it\n        // body: JSON.stringify({ username, password }), \n      });\n      if (!response.ok) throw new Error('Failed to create account');\n\n      const data = await response.json();\n      localStorage.setItem('api_key', data.api_key); // Store API key in localStorage\n      sessionStorage.setItem('user_name', data.username); // Store username in sessionStorage\n      sessionStorage.setItem('password', data.password); // Store password in sessionStorage\n      console.log('Account created:', data);\n      navigate('/profile'); // Navigate to profile page upon successful account creation\n    } catch (error) {\n      console.error('Error creating account:', error);\n      // Handle error (e.g., show error message to user)\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      <h2>Or</h2>\n      <button onClick={handleCreateAccountSubmit}>Create an Account Automatically</button>\n    </div>\n  );\n}\n\nexport default LoginPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
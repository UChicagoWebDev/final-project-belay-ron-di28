{"ast":null,"code":"var _jsxFileName = \"/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/MessageList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageList({\n  currentChannel,\n  setSelectedMessageId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [hoveredMessageId, setHoveredMessageId] = useState(null);\n  const [showReactionMenuForMessageId, setShowReactionMenuForMessageId] = useState(null);\n  const navigate = useNavigate();\n  const apiKey = localStorage.getItem('api_key');\n\n  // Function to fetch messages\n  const fetchMessages = () => {\n    if (!currentChannel) return;\n    fetch(`/api/channels/${currentChannel}/messages`, {\n      method: 'GET',\n      headers: {\n        'API-Key': apiKey\n      }\n    }).then(response => response.json()).then(data => {\n      setMessages(data);\n    }).catch(error => console.error('Error fetching messages:', error));\n  };\n  useEffect(() => {\n    fetchMessages(); // Fetch messages initially\n\n    const intervalId = setInterval(() => {\n      fetchMessages(); // Fetch messages every 5000 ms\n    }, 5000);\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, [currentChannel, apiKey]); // Re-run effect if currentChannel changes\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      const response = await fetch(`/api/channels/${currentChannel}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey\n        },\n        body: JSON.stringify({\n          message: newMessage\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to post message');\n      }\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error posting message:', error);\n    }\n  };\n  const handleReplyClick = messageId => {\n    navigate(`/channels/${currentChannel}/replies/${messageId}`);\n    setSelectedMessageId(messageId);\n  };\n  const handleAddReaction = async (messageId, emoji) => {\n    const apiKey = localStorage.getItem('api_key');\n    try {\n      const response = await fetch(`/api/messages/${messageId}/reactions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey\n        },\n        body: JSON.stringify({\n          emoji: emoji\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to add reaction');\n      }\n      console.log('Reaction added successfully');\n    } catch (error) {\n      console.error('Error adding reaction:', error);\n    } finally {\n      setShowReactionMenuForMessageId(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list\",\n    children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-item\",\n      onMouseEnter: () => setHoveredMessageId(msg.id),\n      onMouseLeave: () => setHoveredMessageId(null),\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [msg.name, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), \" \", msg.body, msg.num_replies > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleReplyClick(msg.id),\n        children: [msg.num_replies, \" of replies\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactions\",\n        children: msg.reactions.map((reaction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reaction\",\n          title: reaction.userNames.join(', '),\n          children: reaction.emoji\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), hoveredMessageId === msg.id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleReplyClick(msg.id),\n          children: \"Reply to Thread\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowReactionMenuForMessageId(showReactionMenuForMessageId === msg.id ? null : msg.id),\n          children: \"Add Reaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), showReactionMenuForMessageId === msg.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reaction-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddReaction(msg.id, '❤️'),\n            children: \"\\u2764\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddReaction(msg.id, '😊'),\n            children: \"\\uD83D\\uDE0A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddReaction(msg.id, '😢'),\n            children: \"\\uD83D\\uDE22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, msg.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Write a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageList, \"GCpN7vCDt1bBpK7P+Qmnvy2ZBPU=\", false, function () {\n  return [useNavigate];\n});\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","MessageList","currentChannel","setSelectedMessageId","_s","messages","setMessages","newMessage","setNewMessage","hoveredMessageId","setHoveredMessageId","showReactionMenuForMessageId","setShowReactionMenuForMessageId","navigate","apiKey","localStorage","getItem","fetchMessages","fetch","method","headers","then","response","json","data","catch","error","console","intervalId","setInterval","clearInterval","handleSubmit","e","preventDefault","trim","body","JSON","stringify","message","ok","Error","handleReplyClick","messageId","handleAddReaction","emoji","errorData","log","className","children","map","msg","onMouseEnter","id","onMouseLeave","name","fileName","_jsxFileName","lineNumber","columnNumber","num_replies","onClick","reactions","reaction","index","title","userNames","join","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/MessageList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction MessageList({ currentChannel, setSelectedMessageId }) {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [hoveredMessageId, setHoveredMessageId] = useState(null);\n  const [showReactionMenuForMessageId, setShowReactionMenuForMessageId] = useState(null);\n\n  const navigate = useNavigate();\n    \n  const apiKey = localStorage.getItem('api_key'); \n\n\n  // Function to fetch messages\n  const fetchMessages = () => {\n    if (!currentChannel) return;\n\n    fetch(`/api/channels/${currentChannel}/messages`, {\n      method: 'GET',\n      headers: {\n        'API-Key': apiKey\n      },\n    })\n    .then(response => response.json())\n    .then(data => {\n      setMessages(data);\n    })\n    .catch(error => console.error('Error fetching messages:', error));\n  };\n\n  useEffect(() => {\n    fetchMessages(); // Fetch messages initially\n\n    const intervalId = setInterval(() => {\n      fetchMessages(); // Fetch messages every 5000 ms\n    }, 5000);\n\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, [currentChannel, apiKey]); // Re-run effect if currentChannel changes\n\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!newMessage.trim()) return; \n\n    try {\n      const response = await fetch(`/api/channels/${currentChannel}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey \n        },\n        body: JSON.stringify({ message: newMessage }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to post message');\n      }\n\n      setNewMessage(''); \n\n    } catch (error) {\n      console.error('Error posting message:', error);\n    }\n  };\n\n  const handleReplyClick = (messageId) => {\n    navigate(`/channels/${currentChannel}/replies/${messageId}`);\n    setSelectedMessageId(messageId);\n  };\n\n  const handleAddReaction = async (messageId, emoji) => {\n    const apiKey = localStorage.getItem('api_key'); \n  \n    try {\n      const response = await fetch(`/api/messages/${messageId}/reactions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey \n        },\n        body: JSON.stringify({ emoji: emoji }), \n      });\n  \n      if (!response.ok) {\n        \n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to add reaction');\n      }\n  \n      console.log('Reaction added successfully');\n    } catch (error) {\n      console.error('Error adding reaction:', error);\n    } finally {\n      setShowReactionMenuForMessageId(null);\n    }\n  };\n\n  return (\n    <div className=\"message-list\">\n      {messages.map((msg) => (\n        <div \n          key={msg.id} \n          className=\"message-item\"\n          onMouseEnter={() => setHoveredMessageId(msg.id)}\n          onMouseLeave={() => setHoveredMessageId(null)}\n        >\n          <strong>{msg.name}:</strong> {msg.body}\n          {msg.num_replies > 0 && (\n            <div onClick={() => handleReplyClick(msg.id)}>\n              {msg.num_replies} of replies\n            </div>\n          )}\n          {/* Display reactions */}\n          <div className=\"reactions\">\n            {msg.reactions.map((reaction, index) => (\n              <div key={index} className=\"reaction\" title={reaction.userNames.join(', ')}>\n                {reaction.emoji}\n              </div>\n            ))}\n          </div>\n          {hoveredMessageId === msg.id && (\n            <div className=\"message-actions\">\n              <button onClick={() => handleReplyClick(msg.id)}>Reply to Thread</button>\n              {/* Adjusted \"Add Reaction\" button */}\n              <button onClick={() => setShowReactionMenuForMessageId(showReactionMenuForMessageId === msg.id ? null : msg.id)}>Add Reaction</button>\n              {showReactionMenuForMessageId === msg.id && (\n                <div className=\"reaction-menu\">\n                  <button onClick={() => handleAddReaction(msg.id, '❤️')}>❤️</button>\n                  <button onClick={() => handleAddReaction(msg.id, '😊')}>😊</button>\n                  <button onClick={() => handleAddReaction(msg.id, '😢')}>😢</button>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      ))}\n      <form onSubmit={handleSubmit} className=\"message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Write a message...\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\n\nexport default MessageList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
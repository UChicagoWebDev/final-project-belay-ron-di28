{"ast":null,"code":"var _jsxFileName = \"/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const navigate = useNavigate();\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const apiKey = localStorage.getItem('api_key'); // Assuming the API key is stored in localStorage\n  const username = sessionStorage.getItem('username');\n  const password = sessionStorage.getItem('password');\n  const handleLogout = () => {\n    // Clear sessionStorage and localStorage\n    sessionStorage.removeItem('username');\n    sessionStorage.removeItem('password');\n    localStorage.removeItem('api_key');\n\n    // Redirect to login page\n    navigate('/login');\n  };\n  const handleChangeUsername = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/user/username', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey\n        },\n        body: JSON.stringify({\n          new_username: newUsername\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update username');\n      }\n      const data = await response.json();\n      console.log(data.message);\n      // Update sessionStorage with the new username\n      sessionStorage.setItem('username', newUsername);\n      // Optionally, inform the user of success\n    } catch (error) {\n      console.error('Error updating username:', error);\n      // Optionally, handle/display the error to the user\n    }\n  };\n  const handleChangePassword = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/user/password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey\n        },\n        body: JSON.stringify({\n          new_password: newPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update password');\n      }\n      const data = await response.json();\n      console.log(data.message);\n      // Update sessionStorage with the new password\n      sessionStorage.setItem('password', newPassword);\n      // Optionally, inform the user of success\n    } catch (error) {\n      console.error('Error updating password:', error);\n      // Optionally, handle/display the error to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleChangeUsername,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUsername,\n        onChange: e => setNewUsername(e.target.value),\n        placeholder: username,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleChangePassword,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        placeholder: password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"4Tz0T4UxcXfDmHFLX78iaG5n/CA=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ProfilePage","_s","navigate","newUsername","setNewUsername","newPassword","setNewPassword","apiKey","localStorage","getItem","username","sessionStorage","password","handleLogout","removeItem","handleChangeUsername","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","new_username","ok","Error","data","json","console","log","message","setItem","error","handleChangePassword","new_password","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction ProfilePage() {\n    const navigate = useNavigate();\n    const [newUsername, setNewUsername] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n\n    const apiKey = localStorage.getItem('api_key'); // Assuming the API key is stored in localStorage\n    const username = sessionStorage.getItem('username');\n    const password = sessionStorage.getItem('password');\n\n    const handleLogout = () => {\n        // Clear sessionStorage and localStorage\n        sessionStorage.removeItem('username');\n        sessionStorage.removeItem('password');\n        localStorage.removeItem('api_key');\n    \n        // Redirect to login page\n        navigate('/login');\n    };\n\n    const handleChangeUsername = async (e) => {\n        e.preventDefault();\n        try {\n        const response = await fetch('/api/user/username', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'API-Key': apiKey\n            }, \n            body: JSON.stringify({ new_username: newUsername }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to update username');\n        }\n\n        const data = await response.json();\n        console.log(data.message);\n        // Update sessionStorage with the new username\n        sessionStorage.setItem('username', newUsername);\n        // Optionally, inform the user of success\n        } catch (error) {\n        console.error('Error updating username:', error);\n        // Optionally, handle/display the error to the user\n        }\n    };\n\n    const handleChangePassword = async (e) => {\n        e.preventDefault();\n        try {\n        const response = await fetch('/api/user/password', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'API-Key': apiKey\n            }, \n            body: JSON.stringify({ new_password: newPassword }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to update password');\n        }\n\n        const data = await response.json();\n        console.log(data.message);\n        // Update sessionStorage with the new password\n        sessionStorage.setItem('password', newPassword);\n        // Optionally, inform the user of success\n        } catch (error) {\n        console.error('Error updating password:', error);\n        // Optionally, handle/display the error to the user\n        }\n    };\n\n    return (\n        <div>\n        <h2>Profile Page</h2>\n        <form onSubmit={handleChangeUsername}>\n            <input\n            type=\"text\"\n            value={newUsername}\n            onChange={(e) => setNewUsername(e.target.value)}\n            placeholder={username}\n            required\n            />\n            <button type=\"submit\">Change Username</button>\n        </form>\n\n        <form onSubmit={handleChangePassword}>\n            <input\n            type=\"text\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            placeholder={password}\n            required\n            />\n            <button type=\"submit\">Change Password</button>\n        </form>\n        <button onClick={handleLogout}>Log Out</button>\n        </div>\n    );\n}\n\nexport default ProfilePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
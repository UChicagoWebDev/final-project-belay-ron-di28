{"ast":null,"code":"var _jsxFileName = \"/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const apiKey = localStorage.getItem('api_key'); // Assuming the API key is stored in localStorage\n  const username = sessionStorage.getItem('username');\n  const password = sessionStorage.getItem('password');\n  const handleChangeUsername = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/user/username', {\n        method: 'POST',\n        headers: {\n          'API-Key': apiKey\n        },\n        body: JSON.stringify({\n          new_username: newUsername\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update username');\n      }\n      const data = await response.json();\n      console.log(data.message);\n      // Update sessionStorage with the new username\n      sessionStorage.setItem('username', newUsername);\n      // Optionally, inform the user of success\n    } catch (error) {\n      console.error('Error updating username:', error);\n      // Optionally, handle/display the error to the user\n    }\n  };\n  const handleChangePassword = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/user/password', {\n        method: 'POST',\n        headers: {\n          'API-Key': apiKey\n        },\n        body: JSON.stringify({\n          new_password: newPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update password');\n      }\n      const data = await response.json();\n      console.log(data.message);\n      // Update sessionStorage with the new password\n      sessionStorage.setItem('password', newPassword);\n      // Optionally, inform the user of success\n    } catch (error) {\n      console.error('Error updating password:', error);\n      // Optionally, handle/display the error to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleChangeUsername,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUsername,\n        onChange: e => setNewUsername(e.target.value),\n        placeholder: username,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleChangePassword,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        placeholder: password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"x3rF9Su6bonV7rQx67A3/gNC7oo=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProfilePage","_s","newUsername","setNewUsername","newPassword","setNewPassword","apiKey","localStorage","getItem","username","sessionStorage","password","handleChangeUsername","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","new_username","ok","Error","data","json","console","log","message","setItem","error","handleChangePassword","new_password","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ProfilePage() {\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n\n  const apiKey = localStorage.getItem('api_key'); // Assuming the API key is stored in localStorage\n  const username = sessionStorage.getItem('username');\n  const password = sessionStorage.getItem('password');\n\n  const handleChangeUsername = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/user/username', {\n        method: 'POST',\n        headers: {\n            'API-Key': apiKey\n        }, \n        body: JSON.stringify({ new_username: newUsername }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update username');\n      }\n\n      const data = await response.json();\n      console.log(data.message);\n      // Update sessionStorage with the new username\n      sessionStorage.setItem('username', newUsername);\n      // Optionally, inform the user of success\n    } catch (error) {\n      console.error('Error updating username:', error);\n      // Optionally, handle/display the error to the user\n    }\n  };\n\n  const handleChangePassword = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/user/password', {\n        method: 'POST',\n        headers: {\n            'API-Key': apiKey\n        }, \n        body: JSON.stringify({ new_password: newPassword }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update password');\n      }\n\n      const data = await response.json();\n      console.log(data.message);\n      // Update sessionStorage with the new password\n      sessionStorage.setItem('password', newPassword);\n      // Optionally, inform the user of success\n    } catch (error) {\n      console.error('Error updating password:', error);\n      // Optionally, handle/display the error to the user\n    }\n  };\n\n  return (\n    <div>\n      <h2>Profile Page</h2>\n      <form onSubmit={handleChangeUsername}>\n        <input\n          type=\"text\"\n          value={newUsername}\n          onChange={(e) => setNewUsername(e.target.value)}\n          placeholder={username}\n          required\n        />\n        <button type=\"submit\">Change Username</button>\n      </form>\n\n      <form onSubmit={handleChangePassword}>\n        <input\n          type=\"text\"\n          value={newPassword}\n          onChange={(e) => setNewPassword(e.target.value)}\n          placeholder={password}\n          required\n        />\n        <button type=\"submit\">Change Password</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ProfilePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
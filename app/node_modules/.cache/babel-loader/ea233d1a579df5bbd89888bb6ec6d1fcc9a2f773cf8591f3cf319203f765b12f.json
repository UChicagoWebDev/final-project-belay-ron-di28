{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChannelList(_ref){let{setCurrentChannel}=_ref;const[channels,setChannels]=useState([]);let navigate=useNavigate();const goToProfile=()=>{navigate('/profile');};useEffect(()=>{const apiKey=localStorage.getItem('api_key');// Fetch channels from the API\nfetch('/api/channels',{method:'GET',headers:{'API-Key':apiKey}})// Adjust the URL as needed\n.then(response=>response.json()).then(data=>{setChannels(data);}).catch(error=>console.error('Error fetching channels:',error));},[]);// This effect runs once on component mount\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"channel-list\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"channel-header\",children:\"Channels\"}),channels.map(channel=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>setCurrentChannel(channel.id),children:channel.name},channel.id)),/*#__PURE__*/_jsx(\"button\",{onClick:goToProfile,children:\"Go to Profile\"})]});}export default ChannelList;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","ChannelList","_ref","setCurrentChannel","channels","setChannels","navigate","goToProfile","apiKey","localStorage","getItem","fetch","method","headers","then","response","json","data","catch","error","console","className","children","map","channel","onClick","id","name"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/ChannelList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction ChannelList({ setCurrentChannel }) {\n  const [channels, setChannels] = useState([]);\n  let navigate = useNavigate();\n  \n  const goToProfile = () => {navigate('/profile');};\n\n\n  useEffect(() => {\n    const apiKey = localStorage.getItem('api_key');\n\n    // Fetch channels from the API\n    fetch('/api/channels', {\n        method: 'GET', \n        headers: {\n            'API-Key': apiKey\n        }\n    }) // Adjust the URL as needed\n      .then(response => response.json())\n      .then(data => {\n        setChannels(data);\n      })\n      .catch(error => console.error('Error fetching channels:', error));\n  }, []); // This effect runs once on component mount\n\n  return (\n    <div className=\"channel-list\">\n      <h2 className=\"channel-header\">Channels</h2>\n      {channels.map(channel => (\n        <div key={channel.id} onClick={() => setCurrentChannel(channel.id)}>\n          {channel.name}\n        </div>\n      ))}\n      <button onClick={goToProfile}>Go to Profile</button>\n    </div>\n  );\n}\n\nexport default ChannelList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,WAAWA,CAAAC,IAAA,CAAwB,IAAvB,CAAEC,iBAAkB,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,GAAI,CAAAY,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE5B,KAAM,CAAAW,WAAW,CAAGA,CAAA,GAAM,CAACD,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAGjDX,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAE9C;AACAC,KAAK,CAAC,eAAe,CAAE,CACnBC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,SAAS,CAAEL,MACf,CACJ,CAAC,CAAE;AAAA,CACAM,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAI,CACZZ,WAAW,CAACY,IAAI,CAAC,CACnB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAAC,CACrE,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACEnB,KAAA,QAAKqB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BxB,IAAA,OAAIuB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,UAAQ,CAAI,CAAC,CAC3ClB,QAAQ,CAACmB,GAAG,CAACC,OAAO,eACnB1B,IAAA,QAAsB2B,OAAO,CAAEA,CAAA,GAAMtB,iBAAiB,CAACqB,OAAO,CAACE,EAAE,CAAE,CAAAJ,QAAA,CAChEE,OAAO,CAACG,IAAI,EADLH,OAAO,CAACE,EAEb,CACN,CAAC,cACF5B,IAAA,WAAQ2B,OAAO,CAAElB,WAAY,CAAAe,QAAA,CAAC,eAAa,CAAQ,CAAC,EACjD,CAAC,CAEV,CAEA,cAAe,CAAArB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function MessageList(_ref){let{currentChannel,setSelectedMessageId}=_ref;const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[hoveredMessageId,setHoveredMessageId]=useState(null);const[showReactionMenuForMessageId,setShowReactionMenuForMessageId]=useState(null);const navigate=useNavigate();const apiKey=localStorage.getItem('api_key');// Function to fetch messages\nconst fetchMessages=()=>{if(!currentChannel)return;fetch(\"/api/channels/\".concat(currentChannel,\"/messages\"),{method:'GET',headers:{'API-Key':apiKey}}).then(response=>response.json()).then(data=>{setMessages(data);}).catch(error=>console.error('Error fetching messages:',error));};useEffect(()=>{fetchMessages();// Fetch messages initially\nconst intervalId=setInterval(()=>{fetchMessages();// Fetch messages every 5000 ms\n},5000);return()=>clearInterval(intervalId);// Cleanup interval on component unmount\n},[currentChannel,apiKey]);// Re-run effect if currentChannel changes\nconst handleSubmit=async e=>{e.preventDefault();if(!newMessage.trim())return;try{const response=await fetch(\"/api/channels/\".concat(currentChannel,\"/messages\"),{method:'POST',headers:{'Content-Type':'application/json','API-Key':apiKey},body:JSON.stringify({message:newMessage})});if(!response.ok){throw new Error('Failed to post message');}setNewMessage('');}catch(error){console.error('Error posting message:',error);}};const handleReplyClick=messageId=>{navigate(\"/channels/\".concat(currentChannel,\"/replies/\").concat(messageId));setSelectedMessageId(messageId);};const handleAddReaction=async(messageId,emoji)=>{const apiKey=localStorage.getItem('api_key');try{const response=await fetch(\"/api/messages/\".concat(messageId,\"/reactions\"),{method:'POST',headers:{'Content-Type':'application/json','API-Key':apiKey},body:JSON.stringify({emoji:emoji})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed to add reaction');}console.log('Reaction added successfully');}catch(error){console.error('Error adding reaction:',error);}finally{setShowReactionMenuForMessageId(null);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"message-list\",children:[messages.map(msg=>/*#__PURE__*/_jsxs(\"div\",{className:\"message-item\",onMouseEnter:()=>setHoveredMessageId(msg.id),onMouseLeave:()=>setHoveredMessageId(null),children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.name,\":\"]}),\" \",msg.body,msg.num_replies>0&&/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleReplyClick(msg.id),children:[msg.num_replies,\" of replies\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"reactions\",children:msg.reactions.map((reaction,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"reaction\",title:reaction.userNames.join(', '),children:reaction.emoji},index))}),hoveredMessageId===msg.id&&/*#__PURE__*/_jsxs(\"div\",{className:\"message-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleReplyClick(msg.id),children:\"Reply to Thread\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowReactionMenuForMessageId(showReactionMenuForMessageId===msg.id?null:msg.id),children:\"Add Reaction\"}),showReactionMenuForMessageId===msg.id&&/*#__PURE__*/_jsxs(\"div\",{className:\"reaction-menu\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAddReaction(msg.id,'‚ù§Ô∏è'),children:\"\\u2764\\uFE0F\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAddReaction(msg.id,'üòä'),children:\"\\uD83D\\uDE0A\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAddReaction(msg.id,'üò¢'),children:\"\\uD83D\\uDE22\"})]})]})]},msg.id)),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"message-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Write a message...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]})]});}export default MessageList;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxs","_jsxs","jsx","_jsx","MessageList","_ref","currentChannel","setSelectedMessageId","messages","setMessages","newMessage","setNewMessage","hoveredMessageId","setHoveredMessageId","showReactionMenuForMessageId","setShowReactionMenuForMessageId","navigate","apiKey","localStorage","getItem","fetchMessages","fetch","concat","method","headers","then","response","json","data","catch","error","console","intervalId","setInterval","clearInterval","handleSubmit","e","preventDefault","trim","body","JSON","stringify","message","ok","Error","handleReplyClick","messageId","handleAddReaction","emoji","errorData","log","className","children","map","msg","onMouseEnter","id","onMouseLeave","name","num_replies","onClick","reactions","reaction","index","title","userNames","join","onSubmit","type","value","onChange","target","placeholder"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/MessageList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction MessageList({ currentChannel, setSelectedMessageId }) {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [hoveredMessageId, setHoveredMessageId] = useState(null);\n  const [showReactionMenuForMessageId, setShowReactionMenuForMessageId] = useState(null);\n\n  const navigate = useNavigate();\n    \n  const apiKey = localStorage.getItem('api_key'); \n\n\n  // Function to fetch messages\n  const fetchMessages = () => {\n    if (!currentChannel) return;\n\n    fetch(`/api/channels/${currentChannel}/messages`, {\n      method: 'GET',\n      headers: {\n        'API-Key': apiKey\n      },\n    })\n    .then(response => response.json())\n    .then(data => {\n      setMessages(data);\n    })\n    .catch(error => console.error('Error fetching messages:', error));\n  };\n\n  useEffect(() => {\n    fetchMessages(); // Fetch messages initially\n\n    const intervalId = setInterval(() => {\n      fetchMessages(); // Fetch messages every 5000 ms\n    }, 5000);\n\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, [currentChannel, apiKey]); // Re-run effect if currentChannel changes\n\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!newMessage.trim()) return; \n\n    try {\n      const response = await fetch(`/api/channels/${currentChannel}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey \n        },\n        body: JSON.stringify({ message: newMessage }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to post message');\n      }\n\n      setNewMessage(''); \n\n    } catch (error) {\n      console.error('Error posting message:', error);\n    }\n  };\n\n  const handleReplyClick = (messageId) => {\n    navigate(`/channels/${currentChannel}/replies/${messageId}`);\n    setSelectedMessageId(messageId);\n  };\n\n  const handleAddReaction = async (messageId, emoji) => {\n    const apiKey = localStorage.getItem('api_key'); \n  \n    try {\n      const response = await fetch(`/api/messages/${messageId}/reactions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'API-Key': apiKey \n        },\n        body: JSON.stringify({ emoji: emoji }), \n      });\n  \n      if (!response.ok) {\n        \n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to add reaction');\n      }\n  \n      console.log('Reaction added successfully');\n    } catch (error) {\n      console.error('Error adding reaction:', error);\n    } finally {\n      setShowReactionMenuForMessageId(null);\n    }\n  };\n\n  return (\n    <div className=\"message-list\">\n      {messages.map((msg) => (\n        <div \n          key={msg.id} \n          className=\"message-item\"\n          onMouseEnter={() => setHoveredMessageId(msg.id)}\n          onMouseLeave={() => setHoveredMessageId(null)}\n        >\n          <strong>{msg.name}:</strong> {msg.body}\n          {msg.num_replies > 0 && (\n            <div onClick={() => handleReplyClick(msg.id)}>\n              {msg.num_replies} of replies\n            </div>\n          )}\n          {/* Display reactions */}\n          <div className=\"reactions\">\n            {msg.reactions.map((reaction, index) => (\n              <div key={index} className=\"reaction\" title={reaction.userNames.join(', ')}>\n                {reaction.emoji}\n              </div>\n            ))}\n          </div>\n          {hoveredMessageId === msg.id && (\n            <div className=\"message-actions\">\n              <button onClick={() => handleReplyClick(msg.id)}>Reply to Thread</button>\n              {/* Adjusted \"Add Reaction\" button */}\n              <button onClick={() => setShowReactionMenuForMessageId(showReactionMenuForMessageId === msg.id ? null : msg.id)}>Add Reaction</button>\n              {showReactionMenuForMessageId === msg.id && (\n                <div className=\"reaction-menu\">\n                  <button onClick={() => handleAddReaction(msg.id, '‚ù§Ô∏è')}>‚ù§Ô∏è</button>\n                  <button onClick={() => handleAddReaction(msg.id, 'üòä')}>üòä</button>\n                  <button onClick={() => handleAddReaction(msg.id, 'üò¢')}>üò¢</button>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      ))}\n      <form onSubmit={handleSubmit} className=\"message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Write a message...\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\n\nexport default MessageList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
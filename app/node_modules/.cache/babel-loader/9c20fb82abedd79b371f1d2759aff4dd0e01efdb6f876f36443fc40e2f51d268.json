{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Route,Routes,Navigate}from'react-router-dom';import ChannelList from'./ChannelList';import MessageList from'./MessageList';import ReplyList from'./ReplyList';import ProfilePage from'./Profile';import LoginPage from'./LoginPage';import ProtectedRoute from'./ProtectedRoute';import{useParams}from'react-router-dom';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function useWindowSize(){const[size,setSize]=useState([window.innerWidth,window.innerHeight]);useEffect(()=>{const handleResize=()=>{setSize([window.innerWidth,window.innerHeight]);};window.addEventListener('resize',handleResize);return()=>window.removeEventListener('resize',handleResize);},[]);return size;}function ChannelAndMessages(){let{channelId,messageId}=useParams();const[selectedMessageId,setSelectedMessageId]=useState(null);const[width]=useWindowSize();const isNarrowScreen=width<768;// Assuming 768px as the breakpoint for narrow screens\nuseEffect(()=>{if(messageId){setSelectedMessageId(messageId);}},[messageId]);const navigate=useNavigate();const renderContent=()=>{if(isNarrowScreen){// Narrow screen logic\nif(messageId){return/*#__PURE__*/_jsx(ReplyList,{messageId:messageId,onClose:()=>navigate(\"/channels/\".concat(channelId))});}else if(channelId){return/*#__PURE__*/_jsx(MessageList,{currentChannel:channelId,setSelectedMessageId:setSelectedMessageId});}else{return/*#__PURE__*/_jsx(ChannelList,{});}}else{// Wide screen logic (unchanged)\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ChannelList,{}),/*#__PURE__*/_jsx(MessageList,{currentChannel:channelId,setSelectedMessageId:setSelectedMessageId}),selectedMessageId&&/*#__PURE__*/_jsx(ReplyList,{messageId:selectedMessageId,onClose:()=>setSelectedMessageId(null)})]});}};return/*#__PURE__*/_jsx(\"div\",{className:\"channel-content\",children:renderContent()});}function App(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ProfilePage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/channels/:channelId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ChannelAndMessages,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/channels/:channelId/replies/:messageId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ChannelAndMessages,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/channels/1\"})})]})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","ChannelList","MessageList","ReplyList","ProfilePage","LoginPage","ProtectedRoute","useParams","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","useWindowSize","size","setSize","window","innerWidth","innerHeight","handleResize","addEventListener","removeEventListener","ChannelAndMessages","channelId","messageId","selectedMessageId","setSelectedMessageId","width","isNarrowScreen","navigate","useNavigate","renderContent","onClose","concat","currentChannel","children","className","App","path","element","replace","to"],"sources":["/Users/rdi28/Desktop/WebDev/FinalProject2/final-project-belay-ron-di28/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport ChannelList from './ChannelList';\nimport MessageList from './MessageList';\nimport ReplyList from './ReplyList';\nimport ProfilePage from './Profile';\nimport LoginPage from './LoginPage';\nimport ProtectedRoute from './ProtectedRoute';\nimport { useParams } from 'react-router-dom';\nimport './App.css'\n\n\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return size;\n}\n\n\nfunction ChannelAndMessages() {\n  let { channelId, messageId } = useParams();\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\n  const [width] = useWindowSize();\n  const isNarrowScreen = width < 768; // Assuming 768px as the breakpoint for narrow screens\n\n  useEffect(() => {\n    if (messageId) {\n      setSelectedMessageId(messageId);\n    }\n  }, [messageId]);\n\n  const navigate = useNavigate();\n\n  const renderContent = () => {\n    if (isNarrowScreen) {\n      // Narrow screen logic\n      if (messageId) {\n        return <ReplyList messageId={messageId} onClose={() => navigate(`/channels/${channelId}`)} />;\n      } else if (channelId) {\n        return <MessageList currentChannel={channelId} setSelectedMessageId={setSelectedMessageId} />;\n      } else {\n        return <ChannelList />;\n      }\n    } else {\n      // Wide screen logic (unchanged)\n      return (\n        <>\n          <ChannelList />\n          <MessageList currentChannel={channelId} setSelectedMessageId={setSelectedMessageId} />\n          {selectedMessageId && <ReplyList messageId={selectedMessageId} onClose={() => setSelectedMessageId(null)} />}\n        </>\n      );\n    }\n  };\n\n  return <div className=\"channel-content\">{renderContent()}</div>;\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Routes>\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/profile\" element={<ProtectedRoute><ProfilePage /></ProtectedRoute>} />\n          <Route path=\"/channels/:channelId\" element={<ProtectedRoute><ChannelAndMessages /></ProtectedRoute>} />\n          <Route path=\"/channels/:channelId/replies/:messageId\" element={<ProtectedRoute><ChannelAndMessages /></ProtectedRoute>} />\n          <Route path=\"/\" element={<Navigate replace to=\"/channels/1\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}